"""empty message

Revision ID: b3a5075f6b99
Revises: 
Create Date: 2023-12-29 12:18:19.145302

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'b3a5075f6b99'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('blacklist', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('sender_id',
               existing_type=mysql.BIGINT(),
               nullable=False)

    with op.batch_alter_table('recall', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('recall', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.alter_column('sender_id',
               existing_type=mysql.BIGINT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('blacklist', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
